test
        Virer les dépendances protractor et @types/jasminewd2, protractor n'étant pas utilisé dans le projet et n'est plus préconisé par angular
          - A faire en même temps qu'une possible implémentation de cypress ?

global

        Créer une version maison de nbTooltip qui puisse faire de l'affichage multiligne (en fournissant par exemple nbTooltip="['Ligne 1','Ligne 2']" ) et pouvant avoir un delai d'affichage au mouseover (exemple qqchose comme nbTooltipTrigger="hover:500") ? Cherry on the cake : pouvoir formatter partiellement le contenu text (partiellement au sein d'une ligne) à minima avec du bold

        npmrc pour indiquer le registry par defaut

        A voir avec la SNCF sur la maj des paquets ou possibilité de créer un fichier de définition de déclaration en attendant "xxx.d.ts" avec les fonctions attendues
          - mettre @types/nodes vers minimum 17.0.29
          - permet de bénéficier de la fonction structuredClone (présent dans les navigateurs récent ou node 17)
          - évite les problématiques liées JSON.parse(JSON.stringify(xxx)) à savoir
            • problème de performance
            • disaparition des types (ne déclenche pas d'erreur avec les types non supportés)
            • disparition de données dans certain cas
          - déplacer la fonction "deepClone" du fichier scenarios/commons/utils.ts vers shared/utils/utils.ts
          - remplacer les JSON.parse(JSON.stringify(xxx)) par l'appel deepClone pour ne gérer qu'une seule fois le remplacement de la fonction ?

        Créer un composant partagé input avec autocomplétion ?

        DONE : Trouver un moyen de masquer le footer de l'app quand on est dans le designer

Back

        DONE : Suppression des tickStories en 500

        DONE : Export des tickStories en 500

Shared

        Composant Canvas : limiter le "scope" du zoom aux dimensions du canvas. Eviter que le canvas ne se retrouve propulsé trop à l'extérieur de la vieBox du canvas wrapper à la suite de zooms et de zooms

        Export: proposer la possibilité de sauvegarder l'ensemble des exports dans un fichier .zip plutôt que de sauvegarder un à un chaque scenarioGroup

        Import: faut-il préciser les erreurs correspondantes à un mauvais contenu du fichier ? (A voir à l'usage)

Scenarios list

        Proposer l'option d'inclure l'entrainement des intents (sentences) dans l'export des scenarios

        Régler le souci d'appel au endpoint de get de scenarioGroups quand l'application courante n'a pas de configuration

        Proposer le fait qu'il existe ou pas une version current dans les critères de filtre

        Permettre de classer les scenarios par date de creation / modification ?

        A la suppression d'un scenarioGroup avec tickStory, ne devrait-on pas proposer de nettoyer les intents et answers attachées au scenario ?

        Storer au niveau du state l'index de pagination. On conserverais ainsi la derniere page affichée au retour du designer ce qui serait sympa

Scenario designer :

        Petit souci de breakpoint au niveau des boutons Cancel, Save, Save & exit. Avec un titre de scenario long, ils passent sous le titre du scenario autour de 1000px alors que le titre pourrait tout a fait etre en ellipsis

        Deux handlers sont susceptibles de porter le meme nom avec des variations de casse

        CONTEXT GRAPH :

                Variables de scenario-conception-item.component.scss : Trouver des noms moins orientés arbre de scenario et remonter le tout au niveau supérieur. On va sans doute vouloir partager ces variables avec le module de test pour y afficher le graph

        WRITING :

                DONE: Ne faut-il pas bloquer le passage à Casting si toutes les branches ne sont pas marquées comme finales ? => Non

        CONCEPTION :

                Internationalisation des answers. Pour le moment seul la i18n d'interfaceType textChat et de locale currentLocale est définie

                ??? Quid des sharedIntents ?


        PUBLISHING :

                ??? Intent : c'est quoi les mandatoryStates ?
